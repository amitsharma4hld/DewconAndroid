// Generated by view binder compiler. Do not edit!
package com.construction.application.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.construction.application.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentServiceLineTwoBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btNxt;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final TextView tvBuiltInformation;

  @NonNull
  public final TextView tvExcavationInfo;

  @NonNull
  public final TextInputEditText txtEtCbLocCornersOfHouse;

  @NonNull
  public final TextInputEditText txtEtCurbSize;

  @NonNull
  public final TextInputEditText txtEtEnterTown;

  @NonNull
  public final TextInputEditText txtEtGasExcavSize;

  @NonNull
  public final TextInputEditText txtEtLeadRemoved;

  @NonNull
  public final TextInputEditText txtEtMainDepth;

  @NonNull
  public final TextInputEditText txtEtMainExcavSize;

  @NonNull
  public final TextInputEditText txtEtMainSize;

  @NonNull
  public final TextInputEditText txtEtMainToCrubDistance;

  @NonNull
  public final TextInputEditText txtEtServiceDepth;

  @NonNull
  public final TextInputEditText txtEtTrenchExcavSize;

  @NonNull
  public final TextInputLayout txtLlCbLocCornersOfHouse;

  @NonNull
  public final TextInputLayout txtLlCurbSize;

  @NonNull
  public final TextInputLayout txtLlGasExcavSize;

  @NonNull
  public final TextInputLayout txtLlLeadRemoved;

  @NonNull
  public final TextInputLayout txtLlMainDepth;

  @NonNull
  public final TextInputLayout txtLlMainExcavSize;

  @NonNull
  public final TextInputLayout txtLlMainSize;

  @NonNull
  public final TextInputLayout txtLlMainToCurbDistance;

  @NonNull
  public final TextInputLayout txtLlServiceDepth;

  @NonNull
  public final TextInputLayout txtLlServiceLength;

  @NonNull
  public final TextInputLayout txtLlTrenchExcavSize;

  private FragmentServiceLineTwoBinding(@NonNull FrameLayout rootView, @NonNull Button btNxt,
      @NonNull LinearLayout rootLayout, @NonNull TextView tvBuiltInformation,
      @NonNull TextView tvExcavationInfo, @NonNull TextInputEditText txtEtCbLocCornersOfHouse,
      @NonNull TextInputEditText txtEtCurbSize, @NonNull TextInputEditText txtEtEnterTown,
      @NonNull TextInputEditText txtEtGasExcavSize, @NonNull TextInputEditText txtEtLeadRemoved,
      @NonNull TextInputEditText txtEtMainDepth, @NonNull TextInputEditText txtEtMainExcavSize,
      @NonNull TextInputEditText txtEtMainSize, @NonNull TextInputEditText txtEtMainToCrubDistance,
      @NonNull TextInputEditText txtEtServiceDepth, @NonNull TextInputEditText txtEtTrenchExcavSize,
      @NonNull TextInputLayout txtLlCbLocCornersOfHouse, @NonNull TextInputLayout txtLlCurbSize,
      @NonNull TextInputLayout txtLlGasExcavSize, @NonNull TextInputLayout txtLlLeadRemoved,
      @NonNull TextInputLayout txtLlMainDepth, @NonNull TextInputLayout txtLlMainExcavSize,
      @NonNull TextInputLayout txtLlMainSize, @NonNull TextInputLayout txtLlMainToCurbDistance,
      @NonNull TextInputLayout txtLlServiceDepth, @NonNull TextInputLayout txtLlServiceLength,
      @NonNull TextInputLayout txtLlTrenchExcavSize) {
    this.rootView = rootView;
    this.btNxt = btNxt;
    this.rootLayout = rootLayout;
    this.tvBuiltInformation = tvBuiltInformation;
    this.tvExcavationInfo = tvExcavationInfo;
    this.txtEtCbLocCornersOfHouse = txtEtCbLocCornersOfHouse;
    this.txtEtCurbSize = txtEtCurbSize;
    this.txtEtEnterTown = txtEtEnterTown;
    this.txtEtGasExcavSize = txtEtGasExcavSize;
    this.txtEtLeadRemoved = txtEtLeadRemoved;
    this.txtEtMainDepth = txtEtMainDepth;
    this.txtEtMainExcavSize = txtEtMainExcavSize;
    this.txtEtMainSize = txtEtMainSize;
    this.txtEtMainToCrubDistance = txtEtMainToCrubDistance;
    this.txtEtServiceDepth = txtEtServiceDepth;
    this.txtEtTrenchExcavSize = txtEtTrenchExcavSize;
    this.txtLlCbLocCornersOfHouse = txtLlCbLocCornersOfHouse;
    this.txtLlCurbSize = txtLlCurbSize;
    this.txtLlGasExcavSize = txtLlGasExcavSize;
    this.txtLlLeadRemoved = txtLlLeadRemoved;
    this.txtLlMainDepth = txtLlMainDepth;
    this.txtLlMainExcavSize = txtLlMainExcavSize;
    this.txtLlMainSize = txtLlMainSize;
    this.txtLlMainToCurbDistance = txtLlMainToCurbDistance;
    this.txtLlServiceDepth = txtLlServiceDepth;
    this.txtLlServiceLength = txtLlServiceLength;
    this.txtLlTrenchExcavSize = txtLlTrenchExcavSize;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentServiceLineTwoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentServiceLineTwoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_service_line_two, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentServiceLineTwoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_nxt;
      Button btNxt = rootView.findViewById(id);
      if (btNxt == null) {
        break missingId;
      }

      id = R.id.root_layout;
      LinearLayout rootLayout = rootView.findViewById(id);
      if (rootLayout == null) {
        break missingId;
      }

      id = R.id.tv_built_information;
      TextView tvBuiltInformation = rootView.findViewById(id);
      if (tvBuiltInformation == null) {
        break missingId;
      }

      id = R.id.tv_excavation_info;
      TextView tvExcavationInfo = rootView.findViewById(id);
      if (tvExcavationInfo == null) {
        break missingId;
      }

      id = R.id.txt_et_cb_loc_corners_of_house;
      TextInputEditText txtEtCbLocCornersOfHouse = rootView.findViewById(id);
      if (txtEtCbLocCornersOfHouse == null) {
        break missingId;
      }

      id = R.id.txt_et_curb_size;
      TextInputEditText txtEtCurbSize = rootView.findViewById(id);
      if (txtEtCurbSize == null) {
        break missingId;
      }

      id = R.id.txt_et_enter_town;
      TextInputEditText txtEtEnterTown = rootView.findViewById(id);
      if (txtEtEnterTown == null) {
        break missingId;
      }

      id = R.id.txt_et_gas_excav_size;
      TextInputEditText txtEtGasExcavSize = rootView.findViewById(id);
      if (txtEtGasExcavSize == null) {
        break missingId;
      }

      id = R.id.txt_et_lead_removed;
      TextInputEditText txtEtLeadRemoved = rootView.findViewById(id);
      if (txtEtLeadRemoved == null) {
        break missingId;
      }

      id = R.id.txt_et_main_depth;
      TextInputEditText txtEtMainDepth = rootView.findViewById(id);
      if (txtEtMainDepth == null) {
        break missingId;
      }

      id = R.id.txt_et_main_excav_size;
      TextInputEditText txtEtMainExcavSize = rootView.findViewById(id);
      if (txtEtMainExcavSize == null) {
        break missingId;
      }

      id = R.id.txt_et_main_size;
      TextInputEditText txtEtMainSize = rootView.findViewById(id);
      if (txtEtMainSize == null) {
        break missingId;
      }

      id = R.id.txt_et_main_to_crub_distance;
      TextInputEditText txtEtMainToCrubDistance = rootView.findViewById(id);
      if (txtEtMainToCrubDistance == null) {
        break missingId;
      }

      id = R.id.txt_et_service_depth;
      TextInputEditText txtEtServiceDepth = rootView.findViewById(id);
      if (txtEtServiceDepth == null) {
        break missingId;
      }

      id = R.id.txt_et_trench_excav_size;
      TextInputEditText txtEtTrenchExcavSize = rootView.findViewById(id);
      if (txtEtTrenchExcavSize == null) {
        break missingId;
      }

      id = R.id.txt_ll_cb_loc_corners_of_house;
      TextInputLayout txtLlCbLocCornersOfHouse = rootView.findViewById(id);
      if (txtLlCbLocCornersOfHouse == null) {
        break missingId;
      }

      id = R.id.txt_ll_curb_size;
      TextInputLayout txtLlCurbSize = rootView.findViewById(id);
      if (txtLlCurbSize == null) {
        break missingId;
      }

      id = R.id.txt_ll_gas_excav_size;
      TextInputLayout txtLlGasExcavSize = rootView.findViewById(id);
      if (txtLlGasExcavSize == null) {
        break missingId;
      }

      id = R.id.txt_ll_lead_removed;
      TextInputLayout txtLlLeadRemoved = rootView.findViewById(id);
      if (txtLlLeadRemoved == null) {
        break missingId;
      }

      id = R.id.txt_ll_main_depth;
      TextInputLayout txtLlMainDepth = rootView.findViewById(id);
      if (txtLlMainDepth == null) {
        break missingId;
      }

      id = R.id.txt_ll_main_excav_size;
      TextInputLayout txtLlMainExcavSize = rootView.findViewById(id);
      if (txtLlMainExcavSize == null) {
        break missingId;
      }

      id = R.id.txt_ll_main_size;
      TextInputLayout txtLlMainSize = rootView.findViewById(id);
      if (txtLlMainSize == null) {
        break missingId;
      }

      id = R.id.txt_ll_main_to_curb_distance;
      TextInputLayout txtLlMainToCurbDistance = rootView.findViewById(id);
      if (txtLlMainToCurbDistance == null) {
        break missingId;
      }

      id = R.id.txt_ll_service_depth;
      TextInputLayout txtLlServiceDepth = rootView.findViewById(id);
      if (txtLlServiceDepth == null) {
        break missingId;
      }

      id = R.id.txt_ll_service_length;
      TextInputLayout txtLlServiceLength = rootView.findViewById(id);
      if (txtLlServiceLength == null) {
        break missingId;
      }

      id = R.id.txt_ll_trench_excav_size;
      TextInputLayout txtLlTrenchExcavSize = rootView.findViewById(id);
      if (txtLlTrenchExcavSize == null) {
        break missingId;
      }

      return new FragmentServiceLineTwoBinding((FrameLayout) rootView, btNxt, rootLayout,
          tvBuiltInformation, tvExcavationInfo, txtEtCbLocCornersOfHouse, txtEtCurbSize,
          txtEtEnterTown, txtEtGasExcavSize, txtEtLeadRemoved, txtEtMainDepth, txtEtMainExcavSize,
          txtEtMainSize, txtEtMainToCrubDistance, txtEtServiceDepth, txtEtTrenchExcavSize,
          txtLlCbLocCornersOfHouse, txtLlCurbSize, txtLlGasExcavSize, txtLlLeadRemoved,
          txtLlMainDepth, txtLlMainExcavSize, txtLlMainSize, txtLlMainToCurbDistance,
          txtLlServiceDepth, txtLlServiceLength, txtLlTrenchExcavSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
