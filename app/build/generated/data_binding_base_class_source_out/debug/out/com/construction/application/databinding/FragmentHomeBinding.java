// Generated by view binder compiler. Do not edit!
package com.construction.application.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.construction.application.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final RelativeLayout belowHeader;

  @NonNull
  public final RelativeLayout bottomToHeader;

  @NonNull
  public final CoordinatorLayout clRoot;

  @NonNull
  public final AutoCompleteTextView etAutoCompleteTextView;

  @NonNull
  public final FrameLayout fragmentHome;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final ImageView ivAppSetting;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final MotionLayout motionLayout;

  @NonNull
  public final ImageView overlapImage;

  @NonNull
  public final RecyclerView rvPrentalVisitRecord;

  @NonNull
  public final RelativeLayout subHeader;

  @NonNull
  public final TextView tvLetsFind;

  @NonNull
  public final TextView tvSubmitReportTitle;

  private FragmentHomeBinding(@NonNull FrameLayout rootView, @NonNull RelativeLayout belowHeader,
      @NonNull RelativeLayout bottomToHeader, @NonNull CoordinatorLayout clRoot,
      @NonNull AutoCompleteTextView etAutoCompleteTextView, @NonNull FrameLayout fragmentHome,
      @NonNull RelativeLayout header, @NonNull ImageView ivAppSetting, @NonNull ImageView ivLogo,
      @NonNull MotionLayout motionLayout, @NonNull ImageView overlapImage,
      @NonNull RecyclerView rvPrentalVisitRecord, @NonNull RelativeLayout subHeader,
      @NonNull TextView tvLetsFind, @NonNull TextView tvSubmitReportTitle) {
    this.rootView = rootView;
    this.belowHeader = belowHeader;
    this.bottomToHeader = bottomToHeader;
    this.clRoot = clRoot;
    this.etAutoCompleteTextView = etAutoCompleteTextView;
    this.fragmentHome = fragmentHome;
    this.header = header;
    this.ivAppSetting = ivAppSetting;
    this.ivLogo = ivLogo;
    this.motionLayout = motionLayout;
    this.overlapImage = overlapImage;
    this.rvPrentalVisitRecord = rvPrentalVisitRecord;
    this.subHeader = subHeader;
    this.tvLetsFind = tvLetsFind;
    this.tvSubmitReportTitle = tvSubmitReportTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.below_header;
      RelativeLayout belowHeader = rootView.findViewById(id);
      if (belowHeader == null) {
        break missingId;
      }

      id = R.id.bottom_to_header;
      RelativeLayout bottomToHeader = rootView.findViewById(id);
      if (bottomToHeader == null) {
        break missingId;
      }

      id = R.id.cl_root;
      CoordinatorLayout clRoot = rootView.findViewById(id);
      if (clRoot == null) {
        break missingId;
      }

      id = R.id.et_autoCompleteTextView;
      AutoCompleteTextView etAutoCompleteTextView = rootView.findViewById(id);
      if (etAutoCompleteTextView == null) {
        break missingId;
      }

      FrameLayout fragmentHome = (FrameLayout) rootView;

      id = R.id.header;
      RelativeLayout header = rootView.findViewById(id);
      if (header == null) {
        break missingId;
      }

      id = R.id.iv_app_setting;
      ImageView ivAppSetting = rootView.findViewById(id);
      if (ivAppSetting == null) {
        break missingId;
      }

      id = R.id.iv_logo;
      ImageView ivLogo = rootView.findViewById(id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.motion_layout;
      MotionLayout motionLayout = rootView.findViewById(id);
      if (motionLayout == null) {
        break missingId;
      }

      id = R.id.overlapImage;
      ImageView overlapImage = rootView.findViewById(id);
      if (overlapImage == null) {
        break missingId;
      }

      id = R.id.rv_prental_visit_record;
      RecyclerView rvPrentalVisitRecord = rootView.findViewById(id);
      if (rvPrentalVisitRecord == null) {
        break missingId;
      }

      id = R.id.sub_header;
      RelativeLayout subHeader = rootView.findViewById(id);
      if (subHeader == null) {
        break missingId;
      }

      id = R.id.tv_lets_find;
      TextView tvLetsFind = rootView.findViewById(id);
      if (tvLetsFind == null) {
        break missingId;
      }

      id = R.id.tv_submit_report_title;
      TextView tvSubmitReportTitle = rootView.findViewById(id);
      if (tvSubmitReportTitle == null) {
        break missingId;
      }

      return new FragmentHomeBinding((FrameLayout) rootView, belowHeader, bottomToHeader, clRoot,
          etAutoCompleteTextView, fragmentHome, header, ivAppSetting, ivLogo, motionLayout,
          overlapImage, rvPrentalVisitRecord, subHeader, tvLetsFind, tvSubmitReportTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
