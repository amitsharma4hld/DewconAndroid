// Generated by view binder compiler. Do not edit!
package com.construction.application.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.construction.application.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CardView cvMenu;

  @NonNull
  public final LinearLayout llAssignment;

  @NonNull
  public final LinearLayout llAuthorizedBy;

  @NonNull
  public final LinearLayout llDepartment;

  @NonNull
  public final LinearLayout llLayout;

  @NonNull
  public final LinearLayout llLocation;

  @NonNull
  public final LinearLayout llReleasedBy;

  @NonNull
  public final LinearLayout llSupplier;

  @NonNull
  public final LinearLayout llTaskPlan;

  @NonNull
  public final LinearLayout llWorkOrder;

  @NonNull
  public final ImageView statusIcon;

  @NonNull
  public final TextView tvActivityNote;

  @NonNull
  public final TextView tvActivityNoteTitle;

  @NonNull
  public final TextView tvAssignment;

  @NonNull
  public final TextView tvAssignmentVlaue;

  @NonNull
  public final TextView tvAuthorizedBy;

  @NonNull
  public final TextView tvAuthorizedByValue;

  @NonNull
  public final TextView tvDepartment;

  @NonNull
  public final TextView tvDepartmentValue;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvLocationValue;

  @NonNull
  public final TextView tvReleasedBy;

  @NonNull
  public final TextView tvReleasedByValue;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvSubmitReportTitle;

  @NonNull
  public final TextView tvSupplier;

  @NonNull
  public final TextView tvSupplierValue;

  @NonNull
  public final TextView tvTaskPlan;

  @NonNull
  public final TextView tvTaskPlanValue;

  @NonNull
  public final TextView tvWorkOrder;

  @NonNull
  public final TextView tvWorkOrderValue;

  @NonNull
  public final View viewStart;

  private FragmentSearchDetailBinding(@NonNull FrameLayout rootView, @NonNull CardView cvMenu,
      @NonNull LinearLayout llAssignment, @NonNull LinearLayout llAuthorizedBy,
      @NonNull LinearLayout llDepartment, @NonNull LinearLayout llLayout,
      @NonNull LinearLayout llLocation, @NonNull LinearLayout llReleasedBy,
      @NonNull LinearLayout llSupplier, @NonNull LinearLayout llTaskPlan,
      @NonNull LinearLayout llWorkOrder, @NonNull ImageView statusIcon,
      @NonNull TextView tvActivityNote, @NonNull TextView tvActivityNoteTitle,
      @NonNull TextView tvAssignment, @NonNull TextView tvAssignmentVlaue,
      @NonNull TextView tvAuthorizedBy, @NonNull TextView tvAuthorizedByValue,
      @NonNull TextView tvDepartment, @NonNull TextView tvDepartmentValue,
      @NonNull TextView tvLocation, @NonNull TextView tvLocationValue,
      @NonNull TextView tvReleasedBy, @NonNull TextView tvReleasedByValue,
      @NonNull TextView tvStatus, @NonNull TextView tvSubmitReportTitle,
      @NonNull TextView tvSupplier, @NonNull TextView tvSupplierValue, @NonNull TextView tvTaskPlan,
      @NonNull TextView tvTaskPlanValue, @NonNull TextView tvWorkOrder,
      @NonNull TextView tvWorkOrderValue, @NonNull View viewStart) {
    this.rootView = rootView;
    this.cvMenu = cvMenu;
    this.llAssignment = llAssignment;
    this.llAuthorizedBy = llAuthorizedBy;
    this.llDepartment = llDepartment;
    this.llLayout = llLayout;
    this.llLocation = llLocation;
    this.llReleasedBy = llReleasedBy;
    this.llSupplier = llSupplier;
    this.llTaskPlan = llTaskPlan;
    this.llWorkOrder = llWorkOrder;
    this.statusIcon = statusIcon;
    this.tvActivityNote = tvActivityNote;
    this.tvActivityNoteTitle = tvActivityNoteTitle;
    this.tvAssignment = tvAssignment;
    this.tvAssignmentVlaue = tvAssignmentVlaue;
    this.tvAuthorizedBy = tvAuthorizedBy;
    this.tvAuthorizedByValue = tvAuthorizedByValue;
    this.tvDepartment = tvDepartment;
    this.tvDepartmentValue = tvDepartmentValue;
    this.tvLocation = tvLocation;
    this.tvLocationValue = tvLocationValue;
    this.tvReleasedBy = tvReleasedBy;
    this.tvReleasedByValue = tvReleasedByValue;
    this.tvStatus = tvStatus;
    this.tvSubmitReportTitle = tvSubmitReportTitle;
    this.tvSupplier = tvSupplier;
    this.tvSupplierValue = tvSupplierValue;
    this.tvTaskPlan = tvTaskPlan;
    this.tvTaskPlanValue = tvTaskPlanValue;
    this.tvWorkOrder = tvWorkOrder;
    this.tvWorkOrderValue = tvWorkOrderValue;
    this.viewStart = viewStart;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_menu;
      CardView cvMenu = rootView.findViewById(id);
      if (cvMenu == null) {
        break missingId;
      }

      id = R.id.ll_assignment;
      LinearLayout llAssignment = rootView.findViewById(id);
      if (llAssignment == null) {
        break missingId;
      }

      id = R.id.ll_authorized_by;
      LinearLayout llAuthorizedBy = rootView.findViewById(id);
      if (llAuthorizedBy == null) {
        break missingId;
      }

      id = R.id.ll_department;
      LinearLayout llDepartment = rootView.findViewById(id);
      if (llDepartment == null) {
        break missingId;
      }

      id = R.id.ll_layout;
      LinearLayout llLayout = rootView.findViewById(id);
      if (llLayout == null) {
        break missingId;
      }

      id = R.id.ll_location;
      LinearLayout llLocation = rootView.findViewById(id);
      if (llLocation == null) {
        break missingId;
      }

      id = R.id.ll_released_by;
      LinearLayout llReleasedBy = rootView.findViewById(id);
      if (llReleasedBy == null) {
        break missingId;
      }

      id = R.id.ll_supplier;
      LinearLayout llSupplier = rootView.findViewById(id);
      if (llSupplier == null) {
        break missingId;
      }

      id = R.id.ll_task_plan;
      LinearLayout llTaskPlan = rootView.findViewById(id);
      if (llTaskPlan == null) {
        break missingId;
      }

      id = R.id.ll_work_order;
      LinearLayout llWorkOrder = rootView.findViewById(id);
      if (llWorkOrder == null) {
        break missingId;
      }

      id = R.id.status_icon;
      ImageView statusIcon = rootView.findViewById(id);
      if (statusIcon == null) {
        break missingId;
      }

      id = R.id.tv_activity_note;
      TextView tvActivityNote = rootView.findViewById(id);
      if (tvActivityNote == null) {
        break missingId;
      }

      id = R.id.tv_activity_note_title;
      TextView tvActivityNoteTitle = rootView.findViewById(id);
      if (tvActivityNoteTitle == null) {
        break missingId;
      }

      id = R.id.tv_assignment;
      TextView tvAssignment = rootView.findViewById(id);
      if (tvAssignment == null) {
        break missingId;
      }

      id = R.id.tv_assignment_vlaue;
      TextView tvAssignmentVlaue = rootView.findViewById(id);
      if (tvAssignmentVlaue == null) {
        break missingId;
      }

      id = R.id.tv_authorized_by;
      TextView tvAuthorizedBy = rootView.findViewById(id);
      if (tvAuthorizedBy == null) {
        break missingId;
      }

      id = R.id.tv_authorized_by_value;
      TextView tvAuthorizedByValue = rootView.findViewById(id);
      if (tvAuthorizedByValue == null) {
        break missingId;
      }

      id = R.id.tv_department;
      TextView tvDepartment = rootView.findViewById(id);
      if (tvDepartment == null) {
        break missingId;
      }

      id = R.id.tv_department_value;
      TextView tvDepartmentValue = rootView.findViewById(id);
      if (tvDepartmentValue == null) {
        break missingId;
      }

      id = R.id.tv_location;
      TextView tvLocation = rootView.findViewById(id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tv_location_value;
      TextView tvLocationValue = rootView.findViewById(id);
      if (tvLocationValue == null) {
        break missingId;
      }

      id = R.id.tv_released_by;
      TextView tvReleasedBy = rootView.findViewById(id);
      if (tvReleasedBy == null) {
        break missingId;
      }

      id = R.id.tv_released_by_value;
      TextView tvReleasedByValue = rootView.findViewById(id);
      if (tvReleasedByValue == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = rootView.findViewById(id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tv_submit_report_title;
      TextView tvSubmitReportTitle = rootView.findViewById(id);
      if (tvSubmitReportTitle == null) {
        break missingId;
      }

      id = R.id.tv_supplier;
      TextView tvSupplier = rootView.findViewById(id);
      if (tvSupplier == null) {
        break missingId;
      }

      id = R.id.tv_supplier_value;
      TextView tvSupplierValue = rootView.findViewById(id);
      if (tvSupplierValue == null) {
        break missingId;
      }

      id = R.id.tv_task_plan;
      TextView tvTaskPlan = rootView.findViewById(id);
      if (tvTaskPlan == null) {
        break missingId;
      }

      id = R.id.tv_task_plan_value;
      TextView tvTaskPlanValue = rootView.findViewById(id);
      if (tvTaskPlanValue == null) {
        break missingId;
      }

      id = R.id.tv_work_order;
      TextView tvWorkOrder = rootView.findViewById(id);
      if (tvWorkOrder == null) {
        break missingId;
      }

      id = R.id.tv_work_order_value;
      TextView tvWorkOrderValue = rootView.findViewById(id);
      if (tvWorkOrderValue == null) {
        break missingId;
      }

      id = R.id.view_start;
      View viewStart = rootView.findViewById(id);
      if (viewStart == null) {
        break missingId;
      }

      return new FragmentSearchDetailBinding((FrameLayout) rootView, cvMenu, llAssignment,
          llAuthorizedBy, llDepartment, llLayout, llLocation, llReleasedBy, llSupplier, llTaskPlan,
          llWorkOrder, statusIcon, tvActivityNote, tvActivityNoteTitle, tvAssignment,
          tvAssignmentVlaue, tvAuthorizedBy, tvAuthorizedByValue, tvDepartment, tvDepartmentValue,
          tvLocation, tvLocationValue, tvReleasedBy, tvReleasedByValue, tvStatus,
          tvSubmitReportTitle, tvSupplier, tvSupplierValue, tvTaskPlan, tvTaskPlanValue,
          tvWorkOrder, tvWorkOrderValue, viewStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
