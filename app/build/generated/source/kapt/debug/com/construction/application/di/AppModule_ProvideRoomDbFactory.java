// Generated by Dagger (https://dagger.dev).
package com.construction.application.di;

import com.construction.application.data.db.AppDatabase;
import com.construction.application.data.db.dao.ReportDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideRoomDbFactory implements Factory<ReportDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public AppModule_ProvideRoomDbFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public ReportDao get() {
    return provideRoomDb(appDatabaseProvider.get());
  }

  public static AppModule_ProvideRoomDbFactory create(Provider<AppDatabase> appDatabaseProvider) {
    return new AppModule_ProvideRoomDbFactory(appDatabaseProvider);
  }

  public static ReportDao provideRoomDb(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRoomDb(appDatabase));
  }
}
