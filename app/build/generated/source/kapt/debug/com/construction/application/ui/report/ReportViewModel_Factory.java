// Generated by Dagger (https://dagger.dev).
package com.construction.application.ui.report;

import com.construction.application.data.repository.ReportRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReportViewModel_Factory implements Factory<ReportViewModel> {
  private final Provider<ReportRepository> repositoryProvider;

  public ReportViewModel_Factory(Provider<ReportRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ReportViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static ReportViewModel_Factory create(Provider<ReportRepository> repositoryProvider) {
    return new ReportViewModel_Factory(repositoryProvider);
  }

  public static ReportViewModel newInstance(ReportRepository repository) {
    return new ReportViewModel(repository);
  }
}
